@url = http://localhost:8000

###############################################
# RBAC AUTHORIZATION
###############################################
### Create Test Users
### Create Admin User
POST {{url}}/profiles
Content-Type: application/json

{
  "firstName": "Admin",
  "lastName": "User",
  "email": "admin@school.com",
  "password": "admin123",
  "role": "admin"
}

##### Create Faculty User
POST {{url}}/profiles
Content-Type: application/json

{
  "firstName": "Faculty",
  "lastName": "User",
  "email": "faculty@school.com",
  "password": "faculty123",
  "role": "faculty"
}

##### Create Student User
POST {{url}}/profiles
Content-Type: application/json

{
  "firstName": "Student",
  "lastName": "User",
  "email": "student@school.com",
  "password": "student123",
  "role": "student"
}

##### Get Authentication Tokens
##### Get Admin Token
POST http://localhost:8000/auth/signin
Content-Type: application/json

{
  "email": "admin@school.com",
  "password": "admin123"
}

##### Get Faculty Token
POST http://localhost:8000/auth/signin
Content-Type: application/json

{
  "email": "faculty@school.com",
  "password": "faculty123"
}

##### Get Student Token
POST http://localhost:8000/auth/signin
Content-Type: application/json

{
  "email": "student@school.com",
  "password": "student123"
}

#################################################
# Test Cases
###############################################
# Store the tokens for later use
# Replace these with the actual tokens received from the sign-in responses
@admin_token = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOjEsImVtYWlsIjoiYWRtaW5Ac2Nob29sLmNvbSIsInJvbGUiOiJhZG1pbiIsImlhdCI6MTc0OTMyNTExMiwiZXhwIjoxNzQ5MzI2MDEyfQ.mOsRn19CxE8YfE8-TLqjXPWukK0rlG0FgD-3qGwVxUM
@faculty_token = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOjIsImVtYWlsIjoiZmFjdWx0eUBzY2hvb2wuY29tIiwicm9sZSI6ImZhY3VsdHkiLCJpYXQiOjE3NDkzMjUxMzIsImV4cCI6MTc0OTMyNjAzMn0.zSpjpnqi8xlhrdjMWroHHt9Oah7ntAlEShkZ-Wx51yY
@student_token = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOjMsImVtYWlsIjoic3R1ZGVudEBzY2hvb2wuY29tIiwicm9sZSI6InN0dWRlbnQiLCJpYXQiOjE3NDkzMzM1NjcsImV4cCI6MTc0OTMzNDQ2N30.-zzdlJFVwhWcJC6YhZmKrGBBVRFb115PhP7OBfIa_RY

# Use admin token for any role that can access all endpoints
@any_token = {{student_token}} 

###Admin can view all profiles
GET http://localhost:8000/profiles
Authorization: Bearer {{admin_token}}

###Faculty can view all profiles
GET http://localhost:8000/profiles
Authorization: Bearer {{faculty_token}}

### Student cannot view all profiles (should return 403)
GET http://localhost:8000/profiles
Authorization: Bearer {{student_token}}

###  All roles can view individual profile
GET http://localhost:8000/profiles/1
Authorization: Bearer {{any_token}}

### Only Admin can delete profiles (others should return 403)
DELETE http://localhost:8000/profiles/1
Authorization: Bearer {{student_token}}
#################################################################
## Test Student Management
#################################################################

### Admin can create students
POST http://localhost:8000/students
Authorization: Bearer {{admin_token}}
Content-Type: application/json

{
  "profileId": 1,
  "studentId": "STU001",
  "year": 1,
  "enrollmentDate" : "2023-09-01"
}

###  Faculty can create students
POST http://localhost:8000/students
Authorization: Bearer {{faculty_token}}
Content-Type: application/json

{
  "profileId": 2,
  "studentId": "STU002",
  "year": 2,
  "enrollmentDate" : "2023-09-01"
}

###  Student cannot create students (should return 403)
POST http://localhost:8000/students
Authorization: Bearer {{student_token}}
Content-Type: application/json

{
  "profileId": 3,
  "studentId": "STU003",
  "year": 1,
  "enrollmentDate" : "2023-09-01"
}
###############################################################
## Test Course Management
###############################################################

### Admin can create courses
POST http://localhost:8000/courses
Authorization: Bearer {{admin_token}}
Content-Type: application/json

{
  "name": "Advanced Mathematics",
  "code": "MATH301",
  "credits": 3,
  "departmentId": 1
}

### Faculty can create courses
POST http://localhost:8000/courses
Authorization: Bearer {{faculty_token}}
Content-Type: application/json

{
  "name": "Computer Science Basics",
  "code": "CS101",
  "credits": 4,
  "departmentId": 1
}

### Student cannot create courses (should return 403)
POST http://localhost:8000/courses
Authorization: Bearer {{student_token}}
Content-Type: application/json

{
  "name": "Test Course",
  "code": "TEST101",
  "credits": 2,
  "departmentId": 1
}

### All roles can view courses
GET http://localhost:8000/courses
Authorization: Bearer {{any_token}}

###########################################################
## Test Department Management
###########################################################
### Admin can create departments
POST http://localhost:8000/departments
Authorization: Bearer {{admin_token}}
Content-Type: application/json

{
  "name": "Computer Science",
  "code": "CS"
}

###  Faculty can create departments
POST http://localhost:8000/departments
Authorization: Bearer {{faculty_token}}
Content-Type: application/json

{
  "name": "Mathematics",
  "code": "MATH"
}

### Student cannot create departments (should return 403)
POST http://localhost:8000/departments
Authorization: Bearer {student_token}
Content-Type: application/json

{
  "name": "Test Department",
  "code": "TEST"
}